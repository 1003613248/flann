module commands.ComputeGTCommand;

import commands.GenericCommand;
import dataset.compute_gt;
import util.logger;

static this() {
	register_command(new ComputeGTCommand(ComputeGTCommand.NAME));
}

class ComputeGTCommand : GenericCommand
{
	public static string NAME = "compute_gt";
	string inputFile;
	string testFile;
	string matchFile;
	uint skip;
	bool byteFeatures;
	
	this(string name) 
	{
		super(name);
		register(inputFile,"i","input-file", "","Input dataset file.");
		register(testFile,"t","test-file", "","Test dataset file (if not present, generated by sampling from the imput dataset.");
 		register(matchFile,"m","match-file", "", "Match file to be generated.");
 		register(skip,"s","skip", 0, "Skip the first k matches.");
 		register(byteFeatures,"B","byte-features", 0, "Use byte sized feature elements.");
 		
 		description = "Computes the ground-truth given an input dataset and a test dataset. If test dataset is not present it is"
 					" sampled form the input dataset";
	}
	
	
	void executeWithType(T)()
	{
		compute_gt!(T)(inputFile, testFile, matchFile, skip);
	}
	
	void execute() 
	{
		if (byteFeatures) {
			executeWithType!(ubyte)();
		} else {
			executeWithType!(float)();
		}		
	}
	

	
}