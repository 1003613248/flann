from command import BaseCommand
from util.exceptions import FLANNException

from io.dataset import read,write
from os.path import isfile
import numpy
import time

from nn.misc import *

class ComputeGroundTruthCommand(BaseCommand):
    
    def __init__(self):
        
        self.parser.add_option("-i", "--input-file", dest="input_file",
                  help="Input dataset file", metavar="FILE")
        self.parser.add_option("-t", "--test-file", dest="test_file",
                  help="Test dataset file (if not present, generated by sampling from the imput dataset", metavar="FILE")
        self.parser.add_option("-m", "--match-file", dest="match_file", default="match.dat",
                  help="Match file to be generated", metavar="FILE")
        self.parser.add_option("-n", "--nn", type="int", default=1,
                  help="How many NN to compute (default 1)")
        self.parser.add_option("-c", "--count", type="int", default=1000,
                  help="How many features to sample in test set if needed. (default: 1000)")

    def execute(self):
        if self.options.input_file==None:
            raise FLANNException("Need an input file")
        print "Reading input data from file "+self.options.input_file
        dataset = read(self.options.input_file)
        
        if self.options.test_file==None:
            raise FLANNException("Need a test file")
        if isfile(self.options.test_file):
            print "Reading test data from file "+self.options.test_file
            testset = read(self.options.test_file)
        else:
            print "Sampling test file"
            testset = sample_dataset(dataset, self.options.count, remove=True)
            dataset = dataset[0:dataset.shape[0]-self.options.count]
            print "Wrinting new dataset file"
            write(dataset,"new_"+self.options.input_file)
            print "Writing testset file"
            write(testset,self.options.test_file)
            
        print "Computing ground truth"
        
        start = time.clock()
        match = compute_ground_truth(dataset, testset, self.options.nn)
        print "It took %g seconds"%(time.clock()-start)
        
        print "Writing match file"
        write(match,self.options.match_file, format="dat")
